<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Indico</name>
    </assembly>
    <members>
        <member name="P:Indico.Entity.Model.Id">
            <summary>
            Gets the Model identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Indico.Entity.Model.Status">
            <summary>
            Gets the Model status.
            </summary>
            <value>The model status.</value>
        </member>
        <member name="P:Indico.Entity.Model.TrainingProgress">
            <summary>
            Gets training progress.
            </summary>
            <value>The training progress.</value>
        </member>
        <member name="P:Indico.Entity.ModelGroup.Id">
            <summary>
            Gets the ModelGroup identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Indico.Entity.ModelGroup.Name">
            <summary>
            Gets the ModelGroup name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Indico.Entity.ModelGroup.Status">
            <summary>
            Gets the ModelGroup status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Indico.Entity.ModelGroup.SelectedModel">
            <summary>
            Gets the selected model.
            </summary>
            <value>The selected model.</value>
        </member>
        <member name="T:Indico.IndicoClient">
            <summary>
            Indico Client to send all GraphQL requests to the platform
            </summary>
        </member>
        <member name="P:Indico.IndicoClient.Config">
            <summary>
            Gets the client config.
            </summary>
        </member>
        <member name="P:Indico.IndicoClient.HttpClient">
            <summary>
            Gets the underlying http client.
            </summary>
        </member>
        <member name="P:Indico.IndicoClient.GraphQLHttpClient">
            <summary>
            Gets the underlying GraphQL client.
            </summary>
        </member>
        <member name="M:Indico.IndicoClient.#ctor(Indico.IndicoConfig)">
            <summary>
            IndicoClient constructor
            </summary>
            <param name="indicoConfig">Client configuration with platform hostname, etc</param>
        </member>
        <member name="M:Indico.IndicoClient.GraphQLRequest(System.String,System.String)">
            <summary>
            Create a new GraphQL request
            </summary>
            <returns>GraphQLRequest</returns>
        </member>
        <member name="M:Indico.IndicoClient.ModelGroupQuery(System.Int32)">
            <summary>
            Create a new Query for a ModelGroup
            </summary>
            <returns>ModelGroupQuery</returns>
        </member>
        <member name="M:Indico.IndicoClient.TrainingModelWithProgressQuery(Indico.Entity.ModelGroup)">
            <summary>
            Create a new Query to retrieve TrainingModelWithProgress.
            </summary>
            <returns>TrainingModelWithProgressQuery</returns>
        </member>
        <member name="M:Indico.IndicoClient.WorkflowSubmission">
            <summary>
            Create a new mutation to submit documents to process by a workflow
            </summary>
            <returns>WorkflowSubmission</returns>
        </member>
        <member name="M:Indico.IndicoClient.ModelGroupLoad(Indico.Entity.ModelGroup)">
            <summary>
            Create a new request to load a ModelGroup.
            </summary>
            <returns>ModelGroupLoad</returns>
        </member>
        <member name="M:Indico.IndicoClient.ModelGroupPredict(Indico.Entity.ModelGroup)">
            <summary>
            Create a new request to fetch model predictions.
            </summary>
            <returns>ModelGroupPredict</returns>
        </member>
        <member name="M:Indico.IndicoClient.DocumentExtraction(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Create a new DocumentExtraction client to OCR files
            </summary>
            <param name="jsonConfig">DocumentExtraction passed in as a JSON Object. Defaults to null</param>
            <returns>DocumentExtraction</returns>
        </member>
        <member name="M:Indico.IndicoClient.JobQuery">
            <summary>
            Create a query to retrieve async job info
            </summary>
            <returns>JobQuery</returns>
        </member>
        <member name="M:Indico.IndicoClient.RetrieveBlob(System.String)">
            <summary>
            Retrieve a blob from indico blob storage
            </summary>
            <param name="url">URL to retrieve. Defaults to null.</param>
            <returns>RetrieveBlob</returns>
        </member>
        <member name="M:Indico.IndicoClient.UploadFile">
            <summary>
            Upload files
            </summary>
            <returns>UploadFile</returns>
        </member>
        <member name="T:Indico.IndicoConfig">
            <summary>
            Indico client configuration
            </summary>
            <remarks>
            Use the builder to modify the config and pass this object to the IndicoClient constructor
            </remarks>
        </member>
        <member name="P:Indico.IndicoConfig.Host">
            <summary>
            Gets the host.
            </summary>
            <value>The host.</value>
        </member>
        <member name="P:Indico.IndicoConfig.Protocol">
            <summary>
            Gets the protocol.
            </summary>
            <value>The protocol.</value>
        </member>
        <member name="P:Indico.IndicoConfig.ApiToken">
            <summary>
            Gets the API token.
            </summary>
            <value>The API token.</value>
        </member>
        <member name="M:Indico.IndicoConfig.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Indico Client config constructor
            </summary>
            <param name="apiToken">The actual text of the API Token</param>
            <param name="tokenPath">Path to the API Token file</param>
            <param name="host">Indico Platform host. Defaults to app.indico.io</param>
            <param name="protocol">Defaults to https</param>
        </member>
        <member name="M:Indico.IndicoConfig.GetAppBaseUrl">
            <summary>
            Get the base URL for the Indico Platform host, including protocol
            </summary>
            <returns>base URL string</returns>
        </member>
        <member name="T:Indico.Jobs.Job">
            <summary>
            Async Job information
            </summary>
        </member>
        <member name="P:Indico.Jobs.Job.Id">
            <summary>
            The Job ID
            </summary>
        </member>
        <member name="M:Indico.Jobs.Job.#ctor(GraphQL.Client.Http.GraphQLHttpClient,System.String)">
            <summary>
            Job constructor
            </summary>
            <param name="graphQLHttpClient">GraphQL Client</param>
            <param name="id">Job id</param>
        </member>
        <member name="M:Indico.Jobs.Job.Status">
            <summary>
            Retrieve job status
            </summary>
            <returns>JobStatus</returns>
        </member>
        <member name="M:Indico.Jobs.Job.Result">
            <summary>
            Retrieve result. Status must be success or an error will be thrown.
            </summary>
            <returns>JSON Object</returns>
        </member>
        <member name="M:Indico.Jobs.Job.Results">
            <summary>
            Retrieve results. Status must be success or an error will be thrown.
            </summary>
            <returns>JSON Array</returns>
        </member>
        <member name="M:Indico.Jobs.Job.Errors">
            <summary>
            If job status is FAILURE returns the list of errors encoutered
            </summary>
            <returns>List of errors</returns>
        </member>
        <member name="P:Indico.Jobs.JobQuery.Id">
            <summary>
            Get/Set the Job ID
            </summary>
        </member>
        <member name="M:Indico.Jobs.JobQuery.#ctor(GraphQL.Client.Http.GraphQLHttpClient)">
            <summary>
            Query a Job
            </summary>
            <param name="graphQLHttpClient"></param>
        </member>
        <member name="M:Indico.Jobs.JobQuery.Exec">
            <summary>
            Returns Job
            </summary>
            <returns>Job</returns>
        </member>
        <member name="M:Indico.Jobs.JobQuery.Refresh">
            <summary>
            Refreshes the Job Object
            </summary>
            <returns>Job</returns>
            <param name="obj">Job</param>
        </member>
        <member name="M:Indico.IMutation`1.Exec(System.Threading.CancellationToken)">
            <summary>
            Execute the graphql query and returns the results as a specific type
            </summary>
            <returns>result of query of type T</returns>
        </member>
        <member name="T:Indico.Mutation.DocumentExtraction">
            <summary>
            OCR PDF, TIF, JPG and PNG files
            </summary>
        </member>
        <member name="P:Indico.Mutation.DocumentExtraction.Files">
            <summary>
            List of files to process
            </summary>
        </member>
        <member name="P:Indico.Mutation.DocumentExtraction.JsonConfig">
            <summary>
            Get/Set the JSON Configuration for DocumentExtraction
            </summary>
        </member>
        <member name="M:Indico.Mutation.DocumentExtraction.#ctor(Indico.IndicoClient)">
            <summary>
            DocumentExtraction constructor
            <param name="client">IndicoClient client</param>
            </summary>
        </member>
        <member name="M:Indico.Mutation.DocumentExtraction.Exec(System.Threading.CancellationToken)">
            <summary>
            Executes OCR and returns Jobs
            <returns>List of Jobs</returns>
            </summary>
        </member>
        <member name="M:Indico.Mutation.DocumentExtraction.Exec(System.String)">
            <summary>
            Executes a single OCR request
            <param name="path">pathname of the file to OCR</param>
            <returns>Job</returns>
            </summary>
        </member>
        <member name="T:Indico.Mutation.GenerateSubmissionResult">
            <summary>
            Generates submission results.
            </summary>
        </member>
        <member name="P:Indico.Mutation.GenerateSubmissionResult.SubmissionId">
            <summary>
            Submission Id.
            </summary>
        </member>
        <member name="M:Indico.Mutation.GenerateSubmissionResult.#ctor(Indico.IndicoClient)">
            <summary>
            Generate Submission Result Constructor.
            </summary>
            <param name="client">Client used to send API requests.</param>
        </member>
        <member name="M:Indico.Mutation.GenerateSubmissionResult.Exec(System.Threading.CancellationToken)">
            <summary>
            Executes requests and returns <c><see cref="T:Indico.Jobs.Job"/></c>.
            </summary>
            <param name="cancellationToken">Token to abort operations.</param>
            <returns><c><see cref="T:Indico.Jobs.Job"/></c></returns>
        </member>
        <member name="T:Indico.Mutation.ModelGroupLoad">
            <summary>
            Loads a Model Group.
            </summary>
        </member>
        <member name="P:Indico.Mutation.ModelGroupLoad.ModelId">
            <summary>
            Model Id.
            </summary>
        </member>
        <member name="M:Indico.Mutation.ModelGroupLoad.#ctor(GraphQL.Client.Http.GraphQLHttpClient)">
            <summary>
            Model Group Load Constructor.
            </summary>
            <param name="graphQLHttpClient">Client used to send API requests.</param>
        </member>
        <member name="M:Indico.Mutation.ModelGroupLoad.ModelGroup(Indico.Entity.ModelGroup)">
            <summary>
            Used to load ModelGroup.
            </summary>
            <param name="modelGroup">Model group.</param>
        </member>
        <member name="M:Indico.Mutation.ModelGroupLoad.Exec(System.Threading.CancellationToken)">
            <summary>
            Executes request and returns load status.  
            </summary>
            <returns>Load status.</returns>
        </member>
        <member name="T:Indico.Mutation.ModelGroupPredict">
            <summary>
            Predicts on a Model Group.
            </summary>
        </member>
        <member name="P:Indico.Mutation.ModelGroupPredict.ModelId">
            <summary>
            Get/Set the Model ID (often Selected Model ID for a Model Group).
            </summary>
        </member>
        <member name="M:Indico.Mutation.ModelGroupPredict.#ctor(GraphQL.Client.Http.GraphQLHttpClient)">
            <summary>
            ModelGroupPredict constructor.
            </summary>
            <param name="graphQLHttpClient">Client used to send API requests.</param>
        </member>
        <member name="M:Indico.Mutation.ModelGroupPredict.Data(System.Collections.Generic.List{System.String})">
            <summary>
            Data to predict.
            </summary>
            <returns>ModelGroupPredict</returns>
        </member>
        <member name="M:Indico.Mutation.ModelGroupPredict.Exec(System.Threading.CancellationToken)">
            <summary>
            Executes request and returns job. 
            </summary>
        </member>
        <member name="T:Indico.Mutation.SubmissionResult">
            <summary>
            Result of a Submission.
            </summary>
        </member>
        <member name="P:Indico.Mutation.SubmissionResult.SubmissionId">
            <summary>
            Submission id.
            </summary>
        </member>
        <member name="P:Indico.Mutation.SubmissionResult.CheckStatus">
            <summary>
            Submission expected status.
            </summary>
        </member>
        <member name="M:Indico.Mutation.SubmissionResult.#ctor(Indico.IndicoClient)">
            <summary>
            SubmissionResult constructor.
            </summary>
            <param name="client">Client used to send API requests.</param>
        </member>
        <member name="M:Indico.Mutation.SubmissionResult.Exec(System.Threading.CancellationToken)">
            <summary>
            Executes request and returns job.
            </summary>
        </member>
        <member name="T:Indico.Mutation.SubmitReview">
            <summary>
            Submits review.
            </summary>
        </member>
        <member name="P:Indico.Mutation.SubmitReview.SubmissionId">
            <summary>
            Submission Id.
            </summary>
        </member>
        <member name="P:Indico.Mutation.SubmitReview.Changes">
            <summary>
            Review's changes.
            </summary>
        </member>
        <member name="P:Indico.Mutation.SubmitReview.Rejected">
            <summary>
            If review rejected.
            </summary>
        </member>
        <member name="P:Indico.Mutation.SubmitReview.ForceComplete">
            <summary>
            Force complete review.
            </summary>
        </member>
        <member name="M:Indico.Mutation.SubmitReview.#ctor(Indico.IndicoClient)">
            <summary>
            Submit Review Constructor.
            </summary>
            <param name="client">Client used to send API requests.</param>
        </member>
        <member name="M:Indico.Mutation.SubmitReview.Exec(System.Threading.CancellationToken)">
            <summary>
            Submits review and returns job.
            </summary>
        </member>
        <member name="T:Indico.Mutation.UpdateSubmission">
            <summary>
            Updates Submission.
            </summary>
        </member>
        <member name="P:Indico.Mutation.UpdateSubmission.SubmissionId">
            <summary>
            Submission id.
            </summary>
        </member>
        <member name="P:Indico.Mutation.UpdateSubmission.Retrieved">
            <summary>
            If retrieved.
            </summary>
        </member>
        <member name="M:Indico.Mutation.UpdateSubmission.#ctor(Indico.IndicoClient)">
            <summary>
            Update Submission Constructor.
            </summary>
            <param name="client">Client used to send API requests.</param>
        </member>
        <member name="M:Indico.Mutation.UpdateSubmission.Exec(System.Threading.CancellationToken)">
            <summary>
            Executes query and returns Submission.
            </summary>
        </member>
        <member name="T:Indico.Mutation.WorkflowSubmission">
            <summary>
            Submits to workflow.
            </summary>
        </member>
        <member name="P:Indico.Mutation.WorkflowSubmission.Detailed">
            <inheritdoc/>
        </member>
        <member name="M:Indico.Mutation.WorkflowSubmission.#ctor(Indico.IndicoClient)">
            <summary>
            WorkflowSubmission constructor.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Indico.Mutation.WorkflowSubmission.Exec(System.Threading.CancellationToken)">
            <summary>
            Executes the query and returns list of submissions ids.
            </summary>
        </member>
        <member name="T:Indico.Mutation.WorkflowSubmissionBase">
            <summary>
            Base for WorkflowSubmission classes.
            </summary>
        </member>
        <member name="P:Indico.Mutation.WorkflowSubmissionBase.WorkflowId">
            <summary>
            Workflow Id
            </summary>
            <value>Workflow Id</value>
        </member>
        <member name="P:Indico.Mutation.WorkflowSubmissionBase.Files">
            <summary>
            Files to submit.
            </summary>
        </member>
        <member name="P:Indico.Mutation.WorkflowSubmissionBase.Streams">
            <summary>
            Streams to submit.
            </summary>
        </member>
        <member name="P:Indico.Mutation.WorkflowSubmissionBase.Urls">
            <summary>
            Uris to submit.
            </summary>
        </member>
        <member name="P:Indico.Mutation.WorkflowSubmissionBase.Detailed">
            <summary>
            If detailed set to false, the <c>Exec</c> method returns simplified result with job and submission ids. If set to true, the result contains detailed information about submitted elements.
            </summary>
        </member>
        <member name="M:Indico.Mutation.WorkflowSubmissionBase.#ctor(Indico.IndicoClient)">
            <summary>
            WorkflowSubmissionBase constructor.
            </summary>
            <param name="client">Client used to send API requests.</param>
        </member>
        <member name="M:Indico.Mutation.WorkflowSubmissionBase.Exec(System.Threading.CancellationToken)">
            <summary>
            Executes request and returns Job.
            </summary>
        </member>
        <member name="T:Indico.Mutation.WorkflowSubmissionDetailed">
            <summary>
            Submits detailed to workflow.
            </summary>
        </member>
        <member name="P:Indico.Mutation.WorkflowSubmissionDetailed.Detailed">
            <inheritdoc/>
        </member>
        <member name="M:Indico.Mutation.WorkflowSubmissionDetailed.#ctor(Indico.IndicoClient)">
            <summary>
            WorkflowSubmissionDetailed constuctor.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Indico.Mutation.WorkflowSubmissionDetailed.Exec(System.Threading.CancellationToken)">
            <summary>
            Executes query and returns list of submissions.
            </summary>
        </member>
        <member name="M:Indico.IQuery`1.Exec(System.Threading.CancellationToken)">
            <summary>
            Execute the graphql query and returns the results as a specific type
            </summary>
            <returns>result of query of type T</returns>
        </member>
        <member name="T:Indico.Query.GetSubmission">
            <summary>
            Gets submission.
            </summary>
        </member>
        <member name="P:Indico.Query.GetSubmission.Id">
            <summary>
            Submission id.
            </summary>
        </member>
        <member name="M:Indico.Query.GetSubmission.#ctor(Indico.IndicoClient)">
            <summary>
            GetSubmission constructor.
            </summary>
            <param name="client">Client used to send API requests.</param>
        </member>
        <member name="M:Indico.Query.GetSubmission.Exec(System.Threading.CancellationToken)">
            <summary>
            Queries the server and returns Submission
            </summary>
            <returns>Submission</returns>
        </member>
        <member name="T:Indico.Query.GetWorkflow">
            <summary>
            Gets workflow.
            </summary>
        </member>
        <member name="P:Indico.Query.GetWorkflow.WorkflowId">
            <summary>
            Workflow id.
            </summary>
        </member>
        <member name="M:Indico.Query.GetWorkflow.#ctor(Indico.IndicoClient)">
            <summary>
            GetWorkflow constructor.
            </summary>
            <param name="client">Client used to send API requests.</param>
        </member>
        <member name="M:Indico.Query.GetWorkflow.Exec(System.Threading.CancellationToken)">
            <summary>
            Executes query and returns workflow.
            </summary>
        </member>
        <member name="T:Indico.Query.ListSubmissions">
            <summary>
            Lists submissions.
            </summary>
        </member>
        <member name="P:Indico.Query.ListSubmissions.SubmissionIds">
            <summary>
            Ids of submissions to list.
            </summary>
        </member>
        <member name="P:Indico.Query.ListSubmissions.WorkflowIds">
            <summary>
            Ids of workflow to list submissions from.
            </summary>
        </member>
        <member name="P:Indico.Query.ListSubmissions.Filters">
            <summary>
            Submission filters.
            </summary>
        </member>
        <member name="P:Indico.Query.ListSubmissions.Limit">
            <summary>
            Return list count limit.
            </summary>
            <value>Default and max is 1000.</value>
        </member>
        <member name="M:Indico.Query.ListSubmissions.#ctor(Indico.IndicoClient)">
            <summary>
            ListSubmissions constructor.
            </summary>
            <param name="client">Client used to send API requests.</param>
        </member>
        <member name="M:Indico.Query.ListSubmissions.Exec(System.Threading.CancellationToken)">
            <summary>
            Executes query and returns list of submissions.
            </summary>
        </member>
        <member name="T:Indico.Query.ListWorkflows">
            <summary>
            Lists workflows.
            </summary>
        </member>
        <member name="P:Indico.Query.ListWorkflows.DatasetIds">
            <summary>
            Datasets ids to list workflows from.
            </summary>
        </member>
        <member name="P:Indico.Query.ListWorkflows.WorkflowIds">
            <summary>
            Workflows ids to list.
            </summary>
        </member>
        <member name="M:Indico.Query.ListWorkflows.#ctor(Indico.IndicoClient)">
            <summary>
            ListWorkflows constructor.
            </summary>
            <param name="client">Client used to send API requests.</param>
        </member>
        <member name="M:Indico.Query.ListWorkflows.Exec(System.Threading.CancellationToken)">
            <summary>
            Executes query and returns list of workflows.
            </summary>
        </member>
        <member name="T:Indico.Query.ModelGroupQuery">
            <summary>
            Gets a Model Group.
            </summary>
        </member>
        <member name="P:Indico.Query.ModelGroupQuery.MgId">
            <summary>
            Get/Set the Model Group ID.
            </summary>
            <value>Model Group ID</value>
        </member>
        <member name="M:Indico.Query.ModelGroupQuery.#ctor(GraphQL.Client.Http.GraphQLHttpClient)">
            <summary>
            ModelGroupQuery constructor.
            </summary>
            <param name="graphQLHttpClient">Client used to send API requests.</param>
        </member>
        <member name="M:Indico.Query.ModelGroupQuery.Exec(System.Threading.CancellationToken)">
            <summary>
            Queries the server and returns ModelGroup
            </summary>
        </member>
        <member name="T:Indico.Query.TrainingModelWithProgressQuery">
            <summary>
            Find the % complete of a training Model Group
            </summary>
        </member>
        <member name="P:Indico.Query.TrainingModelWithProgressQuery.ModelId">
            <summary>
            Get/Set the Model ID (Often, the Selected Model ID for a Model Group)
            </summary>
        </member>
        <member name="M:Indico.Query.TrainingModelWithProgressQuery.#ctor(Indico.IndicoClient)">
            <summary>
            Find the % complete of a training Model Group
            </summary>
            <param name="client">Indico Client</param>
        </member>
        <member name="M:Indico.Query.TrainingModelWithProgressQuery.Exec(System.Threading.CancellationToken)">
            <summary>
            Query a Model Group for training % complete
            </summary>
            <returns>JObject with % training complete</returns>
        </member>
        <member name="T:Indico.Request.GraphQLRequest">
            <summary>
            Class to send GraphQL Queries to the Indico Platform
            </summary>
        </member>
        <member name="P:Indico.Request.GraphQLRequest.Query">
            <summary>
            Get/Set the GraphQL Query String
            </summary>
        </member>
        <member name="P:Indico.Request.GraphQLRequest.OperationName">
            <summary>
            Get/Set the Operation Name
            </summary>
        </member>
        <member name="P:Indico.Request.GraphQLRequest.Variables">
            <summary>
            Get/Set the GraphQL Query Variables
            </summary>
        </member>
        <member name="M:Indico.Request.GraphQLRequest.Call">
            <summary>
            Run the GraphQL Query
            </summary>
            <returns></returns>
        </member>
        <member name="M:Indico.Storage.Blob.#ctor(System.IO.Stream)">
            <summary>
            Blob constructor
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Indico.Storage.Blob.AsStream">
            <summary>
            Returns Blob as Stream
            </summary>
            <returns>Stream</returns>
        </member>
        <member name="M:Indico.Storage.Blob.AsString">
            <summary>
            Returns Blob as string
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Indico.Storage.Blob.AsJSONObject">
            <summary>
            Returns Blob as JSONObject
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="M:Indico.Storage.Blob.AsJSONArray">
            <summary>
            Returns Blob as JSONArray
            </summary>
            <returns>JArray</returns>
        </member>
        <member name="P:Indico.Storage.RetrieveBlob.Url">
            <summary>
            Get/Set the Blob Storage URL
            </summary>
        </member>
        <member name="M:Indico.Storage.RetrieveBlob.#ctor(Indico.IndicoClient)">
            <summary>
            RetrieveBlob Constructor
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Indico.Storage.RetrieveBlob.GZipDecompress(System.IO.Stream)">
            <summary>
            Decompresses Gzip Stream
            </summary>
            <returns>Async String</returns>
            <param name="compressed">Compressed Stream</param>
        </member>
        <member name="M:Indico.Storage.RetrieveBlob.GetStream">
            <summary>
            Retrieve the blob and decompress if needed
            </summary>
            <returns>Stream</returns>
        </member>
        <member name="M:Indico.Storage.RetrieveBlob.Exec">
            <summary>
            Retrieves Blob
            </summary>
            <returns>Blob</returns>
        </member>
        <member name="P:Indico.Storage.UploadFile.Files">
            <summary>
            List of files to upload
            </summary>
        </member>
        <member name="M:Indico.Storage.UploadFile.Call">
            <summary>
            Upload files and return metadata
            </summary>
            <returns>JArray</returns>
        </member>
        <member name="P:Indico.Storage.UploadStream.Streams">
            <summary>
            List of streams to upload
            </summary>
        </member>
        <member name="M:Indico.Storage.UploadStream.Call">
            <summary>
            Upload streams and return metadata
            </summary>
            <returns>JArray</returns>
        </member>
        <member name="F:Indico.Types.JobStatus.PENDING">
            <summary>
            Task state is unknown (assumed pending since you know the id).
            </summary>
        </member>
        <member name="F:Indico.Types.JobStatus.RECEIVED">
            <summary>
            Task was received by a worker (only used in events).
            </summary>
        </member>
        <member name="F:Indico.Types.JobStatus.STARTED">
            <summary>
            Task was started by a worker (:setting:task_track_started).
            </summary>
        </member>
        <member name="F:Indico.Types.JobStatus.SUCCESS">
            <summary>
            Task succeeded
            </summary>
        </member>
        <member name="F:Indico.Types.JobStatus.FAILURE">
            <summary>
            Task failed
            </summary>
        </member>
        <member name="F:Indico.Types.JobStatus.REVOKED">
            <summary>
            Task was revoked.
            </summary>
        </member>
        <member name="F:Indico.Types.JobStatus.REJECTED">
            <summary>
            Task was rejected (only used in events).
            </summary>
        </member>
        <member name="F:Indico.Types.JobStatus.RETRY">
            <summary>
            Task is waiting for retry.
            </summary>
        </member>
        <member name="F:Indico.Types.JobStatus.IGNORED">
            <summary>
            Job Status IGNORED
            </summary>
        </member>
        <member name="F:Indico.Types.PurgeBlobStatus.SUCCESS">
            <summary>
            Successfully removed blob
            </summary>
        </member>
        <member name="F:Indico.Types.PurgeBlobStatus.FAILED">
            <summary>
            Purge failed
            </summary>
        </member>
    </members>
</doc>
